{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/edwardmiller/Documents/React/react-player/src/components/LibrarySong.js\";\nimport React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying\n}) => {\n  const selectSong = () => {\n    setCurrentSong(song.active = true);\n    setCurrentSong(song);\n\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: selectSong,\n    className: `library-song ${song.active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/React/react-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","setCurrentSong","songs","audioRef","isPlaying","selectSong","active","playPromise","current","play","undefined","then","audio","cover","name","artist"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA,QAA/B;AAAyCC,EAAAA;AAAzC,CAAD,KAA0D;AAC5E,QAAMC,UAAU,GAAG,MAAM;AACvBJ,IAAAA,cAAc,CAAED,IAAI,CAACM,MAAL,GAAc,IAAhB,CAAd;AACAL,IAAAA,cAAc,CAACD,IAAD,CAAd;;AACA,QAAII,SAAJ,EAAe;AACb,YAAMG,WAAW,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,IAAjB,EAApB;;AACA,UAAIF,WAAW,KAAKG,SAApB,EAA+B;AAC7BH,QAAAA,WAAW,CAACI,IAAZ,CAAkBC,KAAD,IAAW;AAC1BT,UAAAA,QAAQ,CAACK,OAAT,CAAiBC,IAAjB;AACD,SAFD;AAGD;AACF;AACF,GAXD;;AAaA,sBACE;AACE,IAAA,OAAO,EAAEJ,UADX;AAEE,IAAA,SAAS,EAAG,gBAAeL,IAAI,CAACM,MAAL,GAAc,UAAd,GAA2B,EAAG,EAF3D;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEN,IAAI,CAACa,KAAf;AAAsB,MAAA,GAAG,EAAEb,IAAI,CAACc;AAAhC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKd,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKd,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BD;;KAAMhB,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({ song, setCurrentSong, songs, audioRef, isPlaying }) => {\n  const selectSong = () => {\n    setCurrentSong((song.active = true));\n    setCurrentSong(song);\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then((audio) => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n\n  return (\n    <div\n      onClick={selectSong}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}