{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/edwardmiller/Documents/React/react-player/src/components/Player.js\";\nimport React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  setSongs,\n  songs,\n  audioRef,\n  setCurrentSong,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo\n}) => {\n  //Functions\n  const activeLibraryHandler = nextPrev => {\n    setSongs(songs.map(state => {\n      return { ...state,\n        active: state.id === currentSong.id\n      };\n    }));\n  };\n\n  const playSong = () => {\n    setIsPlaying(!isPlaying);\n\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const drag = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrack = async direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n\n      await setCurrentSong(songs[currentIndex - 1]);\n    }\n\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const animationPercentage = Math.round(songInfo.currentTime / songInfo.duration * 100);\n  const trackAnim = {\n    transform: `translateX(${animationPercentage}% )`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`\n        },\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: drag,\n          min: 0,\n          max: songInfo.duration || 0,\n          value: songInfo.currentTime,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackAnim,\n          className: \"animate-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.duration ? getTime(songInfo.duration) : \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrack(\"skip-back\"),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSong,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrack(\"skip-forward\"),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/React/react-player/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","Player","setSongs","songs","audioRef","setCurrentSong","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","activeLibraryHandler","nextPrev","map","state","active","id","playSong","current","pause","play","getTime","time","Math","floor","slice","drag","e","currentTime","target","value","skipTrack","direction","currentIndex","findIndex","song","length","animationPercentage","round","duration","trackAnim","transform","background","color"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  setSongs,\n  songs,\n  audioRef,\n  setCurrentSong,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n}) => {\n  //Functions\n  const activeLibraryHandler = (nextPrev) => {\n    setSongs(\n      songs.map((state) => {\n        return {\n          ...state,\n          active: state.id === currentSong.id,\n        };\n      })\n    );\n  };\n\n  const playSong = () => {\n    setIsPlaying(!isPlaying);\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const drag = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrack = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[currentIndex - 1]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const animationPercentage = Math.round(\n    (songInfo.currentTime / songInfo.duration) * 100\n  );\n\n  const trackAnim = {\n    transform: `translateX(${animationPercentage}% )`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            onChange={drag}\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrack(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSong}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrack(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}