{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwardmiller/Documents/React/react-player/src/components/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { playAudio } from \"../util.js\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  setSongs,\n  songs,\n  audioRef,\n  setCurrentSong,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo\n}) => {\n  _s();\n\n  useEffect(() => {\n    setSongs(songs.map(state => {\n      return { ...state,\n        active: state.id === currentSong.id\n      };\n    }));\n  }, [currentSong]); //Functions\n\n  const playSong = () => {\n    setIsPlaying(!isPlaying);\n\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const drag = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrack = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        playAudio(isPlaying, audioRef);\n        return;\n      }\n\n      setCurrentSong(songs[currentIndex - 1]);\n    }\n\n    playAudio(isPlaying, audioRef);\n  };\n\n  const animationPercentage = Math.round(songInfo.currentTime / songInfo.duration * 100);\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}% )`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: drag,\n          min: 0,\n          max: songInfo.duration || 0,\n          value: songInfo.currentTime,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackAnim,\n          className: \"animate-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.duration ? getTime(songInfo.duration) : \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrack(\"skip-back\"),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSong,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrack(\"skip-forward\"),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/React/react-player/src/components/Player.js"],"names":["React","useRef","useState","useEffect","FontAwesomeIcon","playAudio","faPlay","faAngleLeft","faAngleRight","faPause","Player","setSongs","songs","audioRef","setCurrentSong","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","map","state","active","id","playSong","current","pause","play","getTime","time","Math","floor","slice","drag","e","currentTime","target","value","skipTrack","direction","currentIndex","findIndex","song","length","animationPercentage","round","duration","trackAnim","transform"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,OAJF,QAKO,mCALP;;AAOA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,QADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,QAHc;AAIdC,EAAAA,cAJc;AAKdC,EAAAA,WALc;AAMdC,EAAAA,SANc;AAOdC,EAAAA,YAPc;AAQdC,EAAAA,WARc;AASdC,EAAAA;AATc,CAAD,KAUT;AAAA;;AACJhB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CACNC,KAAK,CAACQ,GAAN,CAAWC,KAAD,IAAW;AACnB,aAAO,EACL,GAAGA,KADE;AAELC,QAAAA,MAAM,EAAED,KAAK,CAACE,EAAN,KAAaR,WAAW,CAACQ;AAF5B,OAAP;AAID,KALD,CADM,CAAR;AAQD,GATQ,EASN,CAACR,WAAD,CATM,CAAT,CADI,CAWJ;;AACA,QAAMS,QAAQ,GAAG,MAAM;AACrBP,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;;AACA,QAAIA,SAAJ,EAAe;AACbH,MAAAA,QAAQ,CAACY,OAAT,CAAiBC,KAAjB;AACD,KAFD,MAEO;AACLb,MAAAA,QAAQ,CAACY,OAAT,CAAiBE,IAAjB;AACD;AACF,GAPD;;AASA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,WACEC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,IAAwB,GAAxB,GAA8B,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,CAAP,EAA8BG,KAA9B,CAAoC,CAAC,CAArC,CADhC;AAGD,GAJD;;AAMA,QAAMC,IAAI,GAAIC,CAAD,IAAO;AAClBrB,IAAAA,QAAQ,CAACY,OAAT,CAAiBU,WAAjB,GAA+BD,CAAC,CAACE,MAAF,CAASC,KAAxC;AACAnB,IAAAA,WAAW,CAAC,EAAE,GAAGC,QAAL;AAAegB,MAAAA,WAAW,EAAED,CAAC,CAACE,MAAF,CAASC;AAArC,KAAD,CAAX;AACD,GAHD;;AAKA,QAAMC,SAAS,GAAIC,SAAD,IAAe;AAC/B,QAAIC,YAAY,GAAG5B,KAAK,CAAC6B,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACnB,EAAL,KAAYR,WAAW,CAACQ,EAAlD,CAAnB;;AACA,QAAIgB,SAAS,KAAK,cAAlB,EAAkC;AAChCzB,MAAAA,cAAc,CAACF,KAAK,CAAC,CAAC4B,YAAY,GAAG,CAAhB,IAAqB5B,KAAK,CAAC+B,MAA5B,CAAN,CAAd;AACD,KAFD,MAEO,IAAIJ,SAAS,KAAK,WAAlB,EAA+B;AACpC,UAAI,CAACC,YAAY,GAAG,CAAhB,IAAqB5B,KAAK,CAAC+B,MAA3B,KAAsC,CAAC,CAA3C,EAA8C;AAC5C7B,QAAAA,cAAc,CAACF,KAAK,CAACA,KAAK,CAAC+B,MAAN,GAAe,CAAhB,CAAN,CAAd;AACAtC,QAAAA,SAAS,CAACW,SAAD,EAAYH,QAAZ,CAAT;AACA;AACD;;AACDC,MAAAA,cAAc,CAACF,KAAK,CAAC4B,YAAY,GAAG,CAAhB,CAAN,CAAd;AACD;;AACDnC,IAAAA,SAAS,CAACW,SAAD,EAAYH,QAAZ,CAAT;AACD,GAbD;;AAeA,QAAM+B,mBAAmB,GAAGd,IAAI,CAACe,KAAL,CACzB1B,QAAQ,CAACgB,WAAT,GAAuBhB,QAAQ,CAAC2B,QAAjC,GAA6C,GADnB,CAA5B;AAIA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,SAAS,EAAG,cAAa7B,QAAQ,CAACyB,mBAAoB;AADtC,GAAlB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,kBAAIhB,OAAO,CAACT,QAAQ,CAACgB,WAAV;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AACE,UAAA,QAAQ,EAAEF,IADZ;AAEE,UAAA,GAAG,EAAE,CAFP;AAGE,UAAA,GAAG,EAAEd,QAAQ,CAAC2B,QAAT,IAAqB,CAH5B;AAIE,UAAA,KAAK,EAAE3B,QAAQ,CAACgB,WAJlB;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,KAAK,EAAEY,SAAZ;AAAuB,UAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AAAA,kBAAI5B,QAAQ,CAAC2B,QAAT,GAAoBlB,OAAO,CAACT,QAAQ,CAAC2B,QAAV,CAA3B,GAAiD;AAArD;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,eAAD;AACE,QAAA,OAAO,EAAE,MAAMR,SAAS,CAAC,WAAD,CAD1B;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,IAAI,EAAE/B;AAJR;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,eAAD;AACE,QAAA,OAAO,EAAEiB,QADX;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,IAAI,EAAER,SAAS,GAAGP,OAAH,GAAaH;AAJ9B;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE,QAAC,eAAD;AACE,QAAA,OAAO,EAAE,MAAMgC,SAAS,CAAC,cAAD,CAD1B;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,IAAI,EAAE9B;AAJR;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAvGD;;GAAME,M;;KAAAA,M;AAyGN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { playAudio } from \"../util.js\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  setSongs,\n  songs,\n  audioRef,\n  setCurrentSong,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n}) => {\n  useEffect(() => {\n    setSongs(\n      songs.map((state) => {\n        return {\n          ...state,\n          active: state.id === currentSong.id,\n        };\n      })\n    );\n  }, [currentSong]);\n  //Functions\n  const playSong = () => {\n    setIsPlaying(!isPlaying);\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const drag = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrack = (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        playAudio(isPlaying, audioRef);\n        return;\n      }\n      setCurrentSong(songs[currentIndex - 1]);\n    }\n    playAudio(isPlaying, audioRef);\n  };\n\n  const animationPercentage = Math.round(\n    (songInfo.currentTime / songInfo.duration) * 100\n  );\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}% )`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div className=\"track\">\n          <input\n            onChange={drag}\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrack(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSong}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrack(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}