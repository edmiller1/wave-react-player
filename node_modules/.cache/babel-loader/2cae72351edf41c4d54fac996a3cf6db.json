{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/edwardmiller/Documents/React/react-player/src/components/LibrarySong.js\";\nimport React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs\n}) => {\n  const selectSong = () => {\n    setCurrentSong(song); //Play Audio\n\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const getActiveSong = () => {\n    setSongs(songs.map(state => {\n      return { ...state,\n        active: state.id === song.id\n      };\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => {\n      selectSong();\n      getActiveSong();\n    },\n    className: `library-song ${song.active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/React/react-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","setCurrentSong","songs","audioRef","isPlaying","setSongs","selectSong","current","play","getActiveSong","map","state","active","id","cover","name","artist"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,cAFmB;AAGnBC,EAAAA,KAHmB;AAInBC,EAAAA,QAJmB;AAKnBC,EAAAA,SALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAMC,UAAU,GAAG,MAAM;AACvBL,IAAAA,cAAc,CAACD,IAAD,CAAd,CADuB,CAEvB;;AACA,QAAII,SAAJ,EAAeD,QAAQ,CAACI,OAAT,CAAiBC,IAAjB;AAChB,GAJD;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,QAAQ,CACNH,KAAK,CAACQ,GAAN,CAAWC,KAAD,IAAW;AACnB,aAAO,EACL,GAAGA,KADE;AAELC,QAAAA,MAAM,EAAED,KAAK,CAACE,EAAN,KAAab,IAAI,CAACa;AAFrB,OAAP;AAID,KALD,CADM,CAAR;AAQD,GATD;;AAWA,sBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,UAAU;AACVG,MAAAA,aAAa;AACd,KAJH;AAKE,IAAA,SAAS,EAAG,gBAAeT,IAAI,CAACY,MAAL,GAAc,UAAd,GAA2B,EAAG,EAL3D;AAAA,4BAOE;AAAK,MAAA,GAAG,EAAEZ,IAAI,CAACc,KAAf;AAAsB,MAAA,GAAG,EAAEd,IAAI,CAACe;AAAhC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKf,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKf,IAAI,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxCD;;KAAMjB,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const selectSong = () => {\n    setCurrentSong(song);\n    //Play Audio\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const getActiveSong = () => {\n    setSongs(\n      songs.map((state) => {\n        return {\n          ...state,\n          active: state.id === song.id,\n        };\n      })\n    );\n  };\n\n  return (\n    <div\n      onClick={() => {\n        selectSong();\n        getActiveSong();\n      }}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}