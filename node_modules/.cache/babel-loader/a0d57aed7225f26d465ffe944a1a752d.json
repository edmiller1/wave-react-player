{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/edwardmiller/Documents/React/react-player/src/components/LibrarySong.js\";\nimport React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying\n}) => {\n  const selectSong = () => {\n    setCurrentSong(song);\n\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: selectSong,\n    className: \"library-song\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/React/react-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","setCurrentSong","songs","audioRef","isPlaying","selectSong","playPromise","current","play","cover","name","artist"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA,QAA/B;AAAyCC,EAAAA;AAAzC,CAAD,KAA0D;AAC5E,QAAMC,UAAU,GAAG,MAAM;AACvBJ,IAAAA,cAAc,CAACD,IAAD,CAAd;;AACA,QAAII,SAAJ,EAAe;AACb,YAAME,WAAW,GAAGH,QAAQ,CAACI,OAAT,CAAiBC,IAAjB,EAApB;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,OAAO,EAAEH,UAAd;AAA0B,IAAA,SAAS,EAAC,cAApC;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEL,IAAI,CAACS,KAAf;AAAsB,MAAA,GAAG,EAAET,IAAI,CAACU;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKV,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKV,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjBD;;KAAMZ,W;AAmBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({ song, setCurrentSong, songs, audioRef, isPlaying }) => {\n  const selectSong = () => {\n    setCurrentSong(song);\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n    }\n  };\n\n  return (\n    <div onClick={selectSong} className=\"library-song\">\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}